import { createActions } from 'redux-actions';

const {
  getUserData,
  getUserDataSucceed,
  setTimeZone,
  setCurrentTime,
  //financials;
  getBillings,
  getBillingsSucceed,
  getBillingsFailed,

  getInvoices,
  getInvoicesSucceed,
  getInvoicesFailed,

  invoiceDownload,


  //Recharge part
  initRechargeValue,
  getTaxData,
  getTaxDataSucceed,
  getTaxDataFailed,
  checkOrdersData,
  checkOrdersDataSucceed,
  checkOrdersDataFailed,
  orderMainData,
  updateMainData,
  updateMainDataSucceed,
  updateMainDataFailed,
  checkVatId,
  checkVatIdSucceed,
  checkVatIdFailed,
  checkCouponCode,
  checkCouponCodeSucceed,
  checkCouponCodeFailed,
  setPaymentData,
  setCheckBoxVat,
  setCheckBoxDiscountCode,
  enableToPayOrder,
  payByBank,
  payByBankSucceed,
  payByBankFailed,
  setDiscountData,
  setPaymentMethod,
  removeOrder,
  removeOrderSucceed,
  removeOrderFailed,
  payByPaypal,
  payByPaypalSucceed,
  payByPaypalFailed,
  selectCard,
  removeCard,
  payByCard,
  payByCardSucceed,
  payByCardFailed,

} = createActions({
  SET_CURRENT_TIME: currentTime => ({currentTime}),
  GET_USER_DATA: () => ({}),
  GET_USER_DATA_SUCCEED: userData => ({userData}),
  GET_BILLINGS: (params) =>({params}),
  GET_BILLINGS_SUCCEED: (billingsData) => ({billingsData}),
  GET_BILLINGS_FAILED: (error) => ({error}),
  GET_INVOICES: (params) => ({params}),
  GET_INVOICES_SUCCEED: (invoicesData) => ({invoicesData}),
  GET_INVOICES_FAILED: (error) =>({error}),
  INVOICE_DOWNLOAD:(params) =>({params}),

  INIT_RECHARGE_VALUE : (params) => ({params}),
  GET_TAX_DATA: () => ({}),
  GET_TAX_DATA_SUCCEED: (data) => ({data}),
  GET_TAX_DATA_FAILED: (error) => ({error}),
  CHECK_ORDERS_DATA: () => ({}),
  CHECK_ORDERS_DATA_SUCCEED: (ordersData) => ({ordersData}),
  CHECK_ORDERS_DATA_FAILED: (error) => ({error}),
  ORDER_MAIN_DATA: () => ({}),
  UPDATE_MAIN_DATA: (params) => ({params}),
  UPDATE_MAIN_DATA_SUCCEED: (succeed) => ({succeed}),
  UPDATE_MAIN_DATA_FAILED: (error) => ({error}),
  CHECK_VAT_ID : (params) => ({params}),
  CHECK_VAT_ID_SUCCEED: (succeed) => ({succeed}),
  CHECK_VAT_ID_FAILED: (error) => ({error}),
  CHECK_COUPON_CODE: (params) => ({params}),
  CHECK_COUPON_CODE_SUCCEED: (couponData) => ({couponData}),
  CHECK_COUPON_CODE_FAILED: (error) => ({error}),
  SET_PAYMENT_DATA:(paymentData) => ({paymentData}),
  SET_CHECK_BOX_VAT: (value) => ({value}),
  SET_CHECK_BOX_DISCOUNT_CODE: (value) => ({value}),
  ENABLE_TO_PAY_ORDER: () => ({}),
  PAY_BY_BANK: (params) => ({params}),
  PAY_BY_BANK_SUCCEED: (data) => ({data}),
  PAY_BY_BANK_FAILED: (error) => ({error}),
  SET_DISCOUNT_DATA : (value) => ({value}),
  SET_PAYMENT_METHOD: (method) => ({method}),
  REMOVE_ORDER: (order_id) => ({order_id}),
  REMOVE_ORDER_SUCCEED: (succeed) => ({succeed}),
  REMOVE_ORDER_FAILED: (error) => ({error}),
  PAY_BY_PAYPAL : (params) => ({params}),
  PAY_BY_PAYPAL_SUCCEED: (succeed) => ({succeed}),
  PAY_BY_PAYPAL_FAILED:(error) => ({error}),
  SELECT_CARD: (card_id) => ({card_id}),
  REMOVE_CARD: (card_id) => ({card_id}),
  PAY_BY_CARD: (params) => ({params}),
  PAY_BY_CARD_SUCCEED: (succeed) => ({succeed}),
  PAY_BY_CARD_FAILED: (error) => ({error}),

});

export {
  getUserData,
  getUserDataSucceed,
  setTimeZone,
  setCurrentTime,
  getBillings,
  getBillingsSucceed,
  getBillingsFailed,
  getInvoices,
  getInvoicesSucceed,
  getInvoicesFailed,
  invoiceDownload,

 
  //
  initRechargeValue,
  getTaxData,
  getTaxDataSucceed,
  getTaxDataFailed,
  checkOrdersData,
  checkOrdersDataSucceed,
  checkOrdersDataFailed,
  orderMainData,
  updateMainData,
  updateMainDataSucceed,
  updateMainDataFailed,
  checkVatId,
  checkVatIdSucceed,
  checkVatIdFailed,
  checkCouponCode,
  checkCouponCodeSucceed,
  checkCouponCodeFailed,
  setPaymentData,
  setCheckBoxVat,
  setCheckBoxDiscountCode,
  enableToPayOrder,
  payByBank,
  payByBankSucceed,
  payByBankFailed,
  setDiscountData,
  setPaymentMethod,
  removeOrder,
  removeOrderSucceed,
  removeOrderFailed,
  payByPaypal,
  payByPaypalSucceed,
  payByPaypalFailed,
  selectCard,
  removeCard,
  payByCard,
  payByCardSucceed,
  payByCardFailed,
};
